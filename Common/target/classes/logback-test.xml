<?xml version="1.0" encoding="UTF-8"?>

<configuration>
    <!-- 定义日志存储的地址 -->
    <!--<property name="log_dir" value="/Users/csthink/IdeaProjects/MyBatis-Basic/logs"/>-->
    <property name="SYSTEM_LOG_DIR" value="/Users/csthink/IdeaProjects/MyBatis-Basic/logs/common/system"/>
    <property name="SMS_LOG_DIR" value="/Users/csthink/IdeaProjects/MyBatis-Basic/logs/common/sms"/>
    <!-- 控制台打印日志内容 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- encoder的默认实现类是 ch.qos.logback.classic.encoder.PatternLayoutEncoder by default -->
        <encoder>
            <!-- 格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{5} - %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="SYS_DEBUG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${SYSTEM_LOG_DIR}/debug.log</File>
        <append>true</append>
        <!-- 过滤器,只打INFO级别的日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${SYSTEM_LOG_DIR}/debug.log.%d</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder charset="UTF-8">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度 %file 文件名 %line 行号 %msg：日志消息，%n是换行符-->
            <pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] %-5level [%thread] %logger{50} %file:%line - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <appender name="SYS_INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${SYSTEM_LOG_DIR}/info.log</File>
        <append>true</append>
        <!-- 过滤器,只打INFO级别的日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${SYSTEM_LOG_DIR}/info.log.%d</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>

        <encoder charset="UTF-8">
            <pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] %-5level [%thread] %logger{50} %file:%line - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <appender name="SYS_ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${SYSTEM_LOG_DIR}/error.log</File>
        <append>true</append>
        <!--过滤器,只打ERROR级别的日志-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${SYSTEM_LOG_DIR}/error.log.%d</fileNamePattern>
            <maxHistory>12</maxHistory>
        </rollingPolicy>

        <encoder charset="UTF-8">
            <pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] %-5level [%thread] %logger{50} %file:%line - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <appender name="SMS_INFO_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${SMS_LOG_DIR}/sms_info.log</File>
        <append>true</append>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${SMS_LOG_DIR}/sms_info.log.%d</fileNamePattern>
            <maxHistory>12</maxHistory>
        </rollingPolicy>
        <encoder charset="UTF-8">
            <pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] %-5level [%thread] %logger{50} %file:%line - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- name 值可以是包名或具体的类名：该包（包括子包）下的类或该类将采用此logger -->
    <!-- additivity设置false可以避免因所有的logger都是继承自root，日志会打印两遍的问题 -->
    <logger name="com.csthink" level="ERROR">
        <appender-ref ref="SYS_ERROR"/>
    </logger>

    <logger name="com.csthink" level="INFO" additivity="false">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="SMS_INFO_LOG"/>
        <!--<appender-ref ref="SYS_INFO"/>-->
    </logger>

    <logger name="com.csthink" level="DEBUG">
        <appender-ref ref="SYS_DEBUG"/>
    </logger>

    <root level="DEBUG">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="SYS_DEBUG"/>
        <appender-ref ref="SYS_INFO"/>
        <appender-ref ref="SYS_ERROR"/>
    </root>

</configuration>